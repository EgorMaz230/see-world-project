const express = require("express")
const mongoose = require("mongoose")
const cors = require("cors")
const dotenv = require("dotenv")
const path = require("path")
const fs = require("fs")
const authRoutes = require("./routes/auth")

dotenv.config()

const app = express()
const PORT = process.env.PORT || 5000

app.use(cors())
app.use(express.json())

app.use("/api/auth", authRoutes)


const clientPath = path.join(__dirname, "../build")

if (fs.existsSync(clientPath)) {
  console.log("üß† React –∫–ª—ñ—î–Ω—Ç –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ –∑:", clientPath)

  app.use("/see-world-project", express.static(clientPath))

  app.get("/see-world-project/*", (req, res) => {
    res.sendFile(path.join(clientPath, "index.html"))
  })
} else {
  console.warn("‚ö†Ô∏è React frontend –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –õ–∏—à–µ API –ø—Ä–∞—Ü—é—î.")
}

mongoose
  .connect(process.env.MONGO_URI)
  .then(() => {
    console.log("‚úÖ –ë–∞–∑—É –¥–∞–Ω–∏—Ö –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ")
    app.listen(PORT, () => console.log(`üöÄ –°–∞–π—Ç –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`))
  })
  .catch((err) => {
    console.error("‚ùå –ë–∞–∑—É –¥–∞–Ω–∏—Ö –Ω–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ:", err)
  })
